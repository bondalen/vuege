# Конфигурация для расширенной функциональности GraphQL API

spring:
  graphql:
    graphiql:
      enabled: true
      path: /graphiql
    schema:
      locations: classpath:graphql/
      file-extensions: .graphqls
    websocket:
      path: /graphql-ws
    cors:
      allowed-origins: "*"
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: true

# JWT конфигурация
jwt:
  secret: your-super-secret-jwt-key-for-development-only-change-in-production
  expiration: 3600 # 1 час
  refresh-expiration: 86400 # 24 часа

# Rate limiting
rate-limit:
  requests-per-minute: 100
  burst-capacity: 20

# Webhook конфигурация
webhook:
  timeout: 5000 # 5 секунд
  retry-attempts: 3
  retry-delay: 1000 # 1 секунда

# Внешние API
external-api:
  geocoding:
    base-url: https://nominatim.openstreetmap.org
    timeout: 5000
  validation:
    email:
      base-url: https://api.email-validator.net
      api-key: your-api-key
    phone:
      base-url: https://api.phone-validator.net
      api-key: your-api-key

# Кэширование
spring:
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=300s

# Метрики
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# Логирование
logging:
  level:
    io.github.bondalen: DEBUG
    org.springframework.graphql: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"