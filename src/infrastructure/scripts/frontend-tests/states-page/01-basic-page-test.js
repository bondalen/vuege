// ========================================
// –ë–ê–ó–û–í–´–ô –¢–ï–°–¢ –°–¢–†–ê–ù–ò–¶–´ "–ì–û–°–£–î–ê–†–°–¢–í–ê"
// ========================================
// –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ /states
// –ê–≤—Ç–æ—Ä: AI Assistant
// –î–∞—Ç–∞: 25 –∞–≤–≥—É—Å—Ç–∞ 2025

console.log('üîß –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞"');

// ========================================
// –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
// ========================================
function testPageLoad() {
  console.log('\nüìã –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
  const title = document.querySelector('h4.text-h4');
  if (title && title.textContent.includes('–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞')) {
    console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π');
  } else {
    console.log('‚ùå –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
  const addButton = Array.from(document.querySelectorAll('button')).find(btn => 
    btn.textContent.includes('–î–æ–±–∞–≤–∏—Ç—å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ')
  );
  
  if (addButton) {
    console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ" –Ω–∞–π–¥–µ–Ω–∞');
    console.log('üîç –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏:', addButton.textContent.trim());
  } else {
    console.log('‚ùå –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    console.log('üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏:', Array.from(document.querySelectorAll('button')).map(b => b.textContent.trim()));
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
  const table = document.querySelector('table');
  if (table) {
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ –Ω–∞–π–¥–µ–Ω–∞');
  } else {
    console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
}

// ========================================
// –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ
// ========================================
function testTableData() {
  console.log('\nüìä –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ');
  
  const rows = document.querySelectorAll('tbody tr');
  console.log(`üìà –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: ${rows.length}`);
  
  if (rows.length > 0) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤–æ–π –∑–∞–ø–∏—Å–∏
    const firstRow = rows[0];
    const cells = firstRow.querySelectorAll('td');
    
    if (cells.length >= 5) {
      console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è (5+ –∫–æ–ª–æ–Ω–æ–∫)');
      console.log(`üìù –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å: ${cells[0].textContent.trim()}`);
      
      // –í—ã–≤–æ–¥–∏–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
      console.log('üìã –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏:');
      cells.forEach((cell, index) => {
        console.log(`  –ö–æ–ª–æ–Ω–∫–∞ ${index + 1}: ${cell.textContent.trim()}`);
      });
    } else {
      console.log('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
    const actionButtons = firstRow.querySelectorAll('button, .q-btn');
    console.log(`üîß –ö–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –≤ —Å—Ç—Ä–æ–∫–µ: ${actionButtons.length}`);
    
    if (actionButtons.length >= 3) {
      console.log('‚úÖ –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
      
      // –ê–Ω–∞–ª–∏–∑ –∫–Ω–æ–ø–æ–∫
      actionButtons.forEach((button, index) => {
        const icon = button.querySelector('i, .q-icon');
        const ariaLabel = button.getAttribute('aria-label');
        const title = button.getAttribute('title');
        
        console.log(`  –ö–Ω–æ–ø–∫–∞ ${index + 1}:`, {
          icon: icon ? icon.className : '–Ω–µ—Ç –∏–∫–æ–Ω–∫–∏',
          ariaLabel: ariaLabel || '–Ω–µ—Ç aria-label',
          title: title || '–Ω–µ—Ç title',
          text: button.textContent.trim()
        });
      });
    } else {
      console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π');
    }
  } else {
    console.log('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞ –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
  }
}

// ========================================
// –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
// ========================================
function testFilters() {
  console.log('\nüîç –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—è –ø–æ–∏—Å–∫–∞
  let searchInput = null;
  const allInputs = document.querySelectorAll('input');
  
  for (let input of allInputs) {
    const placeholder = input.placeholder || '';
    const ariaLabel = input.getAttribute('aria-label') || '';
    
    if (placeholder.includes('–ü–æ–∏—Å–∫') || ariaLabel.includes('–ü–æ–∏—Å–∫')) {
      searchInput = input;
      break;
    }
  }
  
  if (searchInput) {
    console.log('‚úÖ –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω–æ');
    console.log('üîç Placeholder:', searchInput.placeholder);
    
    // –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
    searchInput.value = '–í–∏–∑–∞–Ω—Ç–∏–π—Å–∫–∞—è';
    searchInput.dispatchEvent(new Event('input'));
    console.log('üîç –í—ã–ø–æ–ª–Ω–µ–Ω –ø–æ–∏—Å–∫ –ø–æ "–í–∏–∑–∞–Ω—Ç–∏–π—Å–∫–∞—è"');
  } else {
    console.log('‚ùå –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    console.log('üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ input –ø–æ–ª—è:', Array.from(allInputs).map(i => ({
      type: i.type,
      placeholder: i.placeholder,
      ariaLabel: i.getAttribute('aria-label')
    })));
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Ç–∏–ø—É
  const typeSelect = document.querySelector('select');
  if (typeSelect) {
    console.log('‚úÖ –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É –Ω–∞–π–¥–µ–Ω');
    console.log(`üìã –î–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π: ${typeSelect.options.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ü–∏–π
    const options = Array.from(typeSelect.options).map(opt => opt.text);
    console.log('üìù –û–ø—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞:', options);
  } else {
    console.log('‚ùå –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
}

// ========================================
// –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–£–°–ö–ê –¢–ï–°–¢–û–í
// ========================================
function runBasicTests() {
  console.log('üöÄ –ó–ê–ü–£–°–ö –ë–ê–ó–û–í–´–• –¢–ï–°–¢–û–í –°–¢–†–ê–ù–ò–¶–´ "–ì–û–°–£–î–ê–†–°–¢–í–ê"');
  console.log('='.repeat(60));
  
  testPageLoad();
  testTableData();
  testFilters();
  
  console.log('\n' + '='.repeat(60));
  console.log('‚úÖ –ë–ê–ó–û–í–´–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´');
  console.log('üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã—à–µ');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runBasicTests();