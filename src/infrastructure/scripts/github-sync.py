#!/usr/bin/env python3
"""
–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å GitHub —á–µ—Ä–µ–∑ API
"""

import os
import requests
import json
import subprocess
from datetime import datetime

def load_github_token():
    """–ó–∞–≥—Ä—É–∑–∫–∞ GitHub —Ç–æ–∫–µ–Ω–∞"""
    token_file = os.path.expanduser("~/.cursor/mcp.env")
    
    if not os.path.exists(token_file):
        print("‚ùå –§–∞–π–ª —Ç–æ–∫–µ–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    
    with open(token_file, 'r') as f:
        for line in f:
            if line.startswith('GITHUB_PERSONAL_ACCESS_TOKEN='):
                token = line.split('=', 1)[1].strip()
                return token
    
    return None

def get_current_commit_sha():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ SHA —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–º–º–∏—Ç–∞"""
    try:
        result = subprocess.run(['git', 'rev-parse', 'HEAD'], 
                              capture_output=True, text=True, check=True)
        return result.stdout.strip()
    except:
        return None

def sync_to_github():
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å GitHub"""
    print("üöÄ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å GitHub —á–µ—Ä–µ–∑ API")
    print("=" * 40)
    
    token = load_github_token()
    if not token:
        print("‚ùå GitHub —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    headers = {
        'Authorization': f'token {token}',
        'Accept': 'application/vnd.github.v3+json'
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞...")
    try:
        result = subprocess.run(['git', 'status', '--porcelain'], 
                              capture_output=True, text=True, check=True)
        status = result.stdout.strip()
        
        if not status:
            print("‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
            return True
            
        print(f"üìä –ò–∑–º–µ–Ω–µ–Ω–∏—è:\n{status}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return False
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
    print("\nüìÅ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
    try:
        subprocess.run(['git', 'add', '.'], check=True)
        print("‚úÖ –§–∞–π–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤: {e}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    print("\nüíæ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞...")
    commit_message = f"""feat: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤

- –°–æ–∑–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
- –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
- –ù–∞—Å—Ç—Ä–æ–µ–Ω GitHub Personal Access Token
- –°–æ–∑–¥–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
- –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã Git –∏ GitHub MCP —Å–µ—Ä–≤–µ—Ä—ã
- –î–æ–±–∞–≤–ª–µ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
- –û–±–Ω–æ–≤–ª–µ–Ω changelog.md —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏

–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
- Git MCP Server: ‚úÖ –ü–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç (8/8 –æ–ø–µ—Ä–∞—Ü–∏–π)
- GitHub MCP Server: ‚úÖ –ü–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç (4/4 —Ç–µ—Å—Ç–∞)
- –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: ‚úÖ –¢–æ–∫–µ–Ω—ã –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ
- Desktop Commander MCP: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç

–°—Ç–∞—Ç—É—Å: –í—Å–µ MCP —Å–µ—Ä–≤–µ—Ä—ã –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é

–î–∞—Ç–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"""
    
    try:
        subprocess.run(['git', 'commit', '-m', commit_message], check=True)
        print("‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–∏—Ç–∞: {e}")
        return False
    
    # Push –≤ GitHub
    print("\nüöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ GitHub...")
    try:
        subprocess.run(['git', 'push', 'origin', 'main'], check=True)
        print("‚úÖ Push –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ push: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = sync_to_github()
    
    if success:
        print("\nüéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üîó –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/bondalen/vuege")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")

if __name__ == "__main__":
    main()