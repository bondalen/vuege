#!/usr/bin/env python3
"""
@file: postgres-mcp-wrapper.py
@description: Python –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è mcp-postgres —Å–µ—Ä–≤–µ—Ä–∞
@pager-protection: –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç pager –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
@dependencies: mcp-postgres-server, subprocess
@created: 2025-08-20
"""

import os
import sys
import subprocess
import signal
import time

def setup_pager_protection():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞—â–∏—Ç—ã –æ—Ç pager –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è pager
    os.environ['PAGER'] = 'cat'
    os.environ['LESS'] = '-R -M --shift 5'
    os.environ['MORE'] = '-R'
    os.environ['COMPOSER_NO_INTERACTION'] = '1'
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º git pager –≥–ª–æ–±–∞–ª—å–Ω–æ
    try:
        subprocess.run(['git', 'config', '--global', 'core.pager', 'cat'], 
                      capture_output=True, check=True)
        print("‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç pager –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞", file=sys.stderr)
    except subprocess.CalledProcessError:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å git pager", file=sys.stderr)
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ pager: {e}", file=sys.stderr)

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞—â–∏—Ç—ã –æ—Ç pager –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
setup_pager_protection()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ mcp-postgres —Å–µ—Ä–≤–µ—Ä–∞"""
    
    # –ü—É—Ç—å –∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É
    mcp_server_path = "/home/alex/.npm-global/bin/mcp-postgres"
    
    # URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL
    database_url = "postgresql://testuser:testpass@localhost:5432/testdb"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not os.path.exists(mcp_server_path):
        print(f"‚ùå MCP —Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω: {mcp_server_path}", file=sys.stderr)
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å PostgreSQL
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ PostgreSQL...", file=sys.stderr)
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã PostgreSQL —Å –∞–±—Å–æ–ª—é—Ç–Ω—ã–º –ø—É—Ç–µ–º
        ensure_script = "/home/alex/vuege/src/infrastructure/scripts/ensure-postgres-running.sh"
        result = subprocess.run([ensure_script], 
                              capture_output=True, text=True, timeout=30)
        if result.returncode != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ PostgreSQL: {result.stderr}", file=sys.stderr)
            sys.exit(1)
        print("‚úÖ PostgreSQL –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ", file=sys.stderr)
    except subprocess.TimeoutExpired:
        print("‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ PostgreSQL", file=sys.stderr)
        sys.exit(1)
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ PostgreSQL: {e}", file=sys.stderr)
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º MCP —Å–µ—Ä–≤–µ—Ä
    print(f"üöÄ –ó–∞–ø—É—Å–∫ MCP —Å–µ—Ä–≤–µ—Ä–∞: {mcp_server_path}", file=sys.stderr)
    print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {database_url}", file=sys.stderr)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –≤—Å–µ—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        process = subprocess.Popen(
            [mcp_server_path, database_url],
            stdin=sys.stdin,
            stdout=sys.stdout,
            stderr=sys.stderr,
            env=os.environ
        )
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
        process.wait()
        
    except KeyboardInterrupt:
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è", file=sys.stderr)
        if process:
            process.terminate()
            try:
                process.wait(timeout=5)
            except subprocess.TimeoutExpired:
                process.kill()
        sys.exit(0)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–∞: {e}", file=sys.stderr)
        sys.exit(1)

if __name__ == "__main__":
    main()
